pipeline TransitDataPipeline {

     TransitDataDownloader 
    -> TransitDataProcessor 
    -> TransitDataSelector
    -> TransitDataTextInterpreter
    -> TransitDataCSVParser
    -> TransitDataValidator
    -> TransitDataLoader;

    block TransitDataDownloader oftype HttpExtractor {
        url: "https://gtfs.rhoenenergie-bus.de/GTFS.zip";
    }

    block TransitDataProcessor oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block TransitDataSelector oftype FilePicker {
        path: "/stops.txt";
    }

    block TransitDataTextInterpreter oftype TextFileInterpreter {}

    block TransitDataCSVParser oftype CSVInterpreter {
        enclosing: '"';
        enclosingEscape: '"';
    }

    block TransitDataValidator oftype TableInterpreter {
        header: true;
        columns: [
            "stop_id" oftype integer, 
            "stop_name" oftype GermanText, 
            "stop_lat" oftype Latitude, 
            "stop_lon" oftype Longitude, 
            "zone_id" oftype ZoneID
        ];
    }

    block TransitDataLoader oftype SQLiteLoader {
        table: "stops";
        file: "gtfs.sqlite";
    }

    // Defining custom value types and constraints

    valuetype GermanText oftype text {
        constraints: [
            AllowedCharactersConstraint
        ];
    }

    constraint AllowedCharactersConstraint on text: value matches /^[A-Za-z0-9äöüÄÖÜß\s\-\.(),]*$/;

    valuetype Latitude oftype decimal {
        constraints: [
            LatitudeRange
        ];
    }

    valuetype Longitude oftype decimal {
        constraints: [
            LongitudeRange
        ];
    }

    constraint LatitudeRange oftype RangeConstraint {
        lowerBound: -90;
        lowerBoundInclusive: true;
        upperBound: 90;
        upperBoundInclusive: true;
    }

    constraint LongitudeRange oftype RangeConstraint {
        lowerBound: -180;
        lowerBoundInclusive: true;
        upperBound: 180;
        upperBoundInclusive: true;
    }

    valuetype ZoneID oftype integer {
        constraints: [
            ZoneRange
        ];
    }

    constraint ZoneRange oftype RangeConstraint {
        lowerBound: 1925;
        upperBound: 2000;
    }

    
}
